name: Python package

on:
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest coveralls
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements-tests.txt ]; then pip install -r requirements-tests.txt; fi
      #      - name: Lint with flake8
      #        run: |
      #          # stop the build if there are Python syntax errors or undefined names
      #          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python -m pytest --junitxml ./reports/results.xml --cov-config .coveragerc --cov=src --cov-report lcov:./reports/lcov.info
      - name: Build Package
        #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          pip install build
          python -m build
      - name: Publish package
        #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
      - name: Coveralls
        #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.COVERALLS_GITHUB_TOKEN }}
          path-to-lcov: ./reports/lcov.info